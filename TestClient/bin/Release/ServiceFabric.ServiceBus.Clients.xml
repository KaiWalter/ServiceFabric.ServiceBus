<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ServiceFabric.ServiceBus.Clients</name>
    </assembly>
    <members>
        <member name="T:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClient">
            <summary>
            An implementation of <see cref="T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient"/> that can communicate to ServiceFabric Services through a Service Bus Queue.
            </summary>
        </member>
        <member name="P:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClient.ResolvedServicePartition">
            <summary>
            Gets or Sets the Resolved service partition which was used when this client was created.
            </summary>
            <value>
            <see cref="T:System.Fabric.ResolvedServicePartition"/> object
            </value>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClient.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance using the provided ServiceFabric Service Uri and Service Bus Queue name.
            </summary>
            <param name="serviceUri"></param>
            <param name="queueName"></param>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClient.SendMessageAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            Sends a message to the ServiceFabric Service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClient.SendMessage(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            Sends a message to the ServiceFabric Service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClient.AbortClient">
            <summary>
            Closes the connection to the ServiceFabric Service
            </summary>
        </member>
        <member name="T:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClientFactory">
            <summary>
            Factory that creates instances of ServiceBusQueueCommunicationClient to communicate to ServiceFabric Services using a Service Bus Queue.
            </summary>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClientFactory.#ctor(Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver,System.String)">
            <summary>
            Creates a new instance, using the provided <see cref="T:Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver"/> and Service Bus Queue name.
            </summary>
            <param name="resolver"></param>
            <param name="queueName"></param>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClientFactory.ValidateClient(ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClient)">
            <summary>
            Returns true if the client is still valid. Connection oriented transports can use this method to indicate that the client is no longer
                        connected to the service.
            </summary>
            <param name="client">the communication client</param>
            <returns>
            true if the client is valid, false otherwise
            </returns>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClientFactory.ValidateClient(System.String,ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClient)">
            <summary>
            Returns true if the client is still valid and connected to the endpoint specified in the parameter.
            </summary>
            <param name="endpoint">the endpoint to which the </param><param name="client">the communication client</param>
            <returns>
            true if the client is valid, false otherwise
            </returns>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClientFactory.CreateClientAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a communication client for the given endpoint address.
            </summary>
            <param name="endpoint">Endpoint address where the service is listening</param><param name="cancellationToken">Cancellation token</param>
            <returns>
            The communication client that was created
            </returns>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClientFactory.AbortClient(ServiceFabric.ServiceBus.Clients.ServiceBusQueueCommunicationClient)">
            <summary>
            Aborts the given client
            </summary>
            <param name="client">Communication client</param>
        </member>
        <member name="T:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClient">
            <summary>
            An implementation of <see cref="T:Microsoft.ServiceFabric.Services.Communication.Client.ICommunicationClient"/> that can communicate to ServiceFabric Services through a Service Bus Topic.
            </summary>
        </member>
        <member name="P:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClient.ResolvedServicePartition">
            <summary>
            Gets or Sets the Resolved service partition which was used when this client was created.
            </summary>
            <value>
            <see cref="T:System.Fabric.ResolvedServicePartition"/> object
            </value>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClient.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance using the provided ServiceFabric Service Uri and Service Bus Topic name.
            </summary>
            <param name="serviceUri"></param>
            <param name="topicName"></param>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClient.SendMessageAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            Sends a message to the ServiceFabric Service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClient.SendMessage(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            Sends a message to the ServiceFabric Service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClient.AbortClient">
            <summary>
            Closes the connection to the ServiceFabric Service
            </summary>
        </member>
        <member name="T:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClientFactory">
            <summary>
            Factory that creates instances of ServiceBusQueueCommunicationClient to communicate to ServiceFabric Services 
            using a Service Bus Topic.
            </summary>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClientFactory.#ctor(Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver,System.String)">
            <summary>
            Creates a new instance, using the provided <see cref="T:Microsoft.ServiceFabric.Services.Client.ServicePartitionResolver"/> and Service Bus Topic name.
            </summary>
            <param name="resolver"></param>
            <param name="topicName"></param>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClientFactory.ValidateClient(ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClient)">
            <summary>
            Returns true if the client is still valid. Connection oriented transports can use this method to indicate that the client is no longer
                        connected to the service.
            </summary>
            <param name="client">the communication client</param>
            <returns>
            true if the client is valid, false otherwise
            </returns>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClientFactory.ValidateClient(System.String,ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClient)">
            <summary>
            Returns true if the client is still valid and connected to the endpoint specified in the parameter.
            </summary>
            <param name="endpoint">the endpoint to which the </param><param name="client">the communication client</param>
            <returns>
            true if the client is valid, false otherwise
            </returns>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClientFactory.CreateClientAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a communication client for the given endpoint address.
            </summary>
            <param name="endpoint">Endpoint address where the service is listening</param><param name="cancellationToken">Cancellation token</param>
            <returns>
            The communication client that was created
            </returns>
        </member>
        <member name="M:ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClientFactory.AbortClient(ServiceFabric.ServiceBus.Clients.ServiceBusTopicCommunicationClient)">
            <summary>
            Aborts the given client
            </summary>
            <param name="client">Communication client</param>
        </member>
    </members>
</doc>
